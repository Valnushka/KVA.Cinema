@model IEnumerable<KVA.Cinema.Models.Genre.GenreDisplayViewModel>
@using KVA.Cinema.Models.ViewModels.Genre;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

@if (User.Identity.IsAuthenticated)
{
    <p>
        @Html.ActionLink("Create New", "Create", "Genres", null, new { @class = "btn btn-primary" })
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink(
                    ViewBag.SortingField == GenreSort.Title
                    ? $"Title {(ViewBag.SortDescending ? "▾" : "▴")}"
                    : "Title",
                    "Index", new { sortingField = GenreSort.Title, isSortDescending = (ViewBag.SortingField == GenreSort.Title && !ViewBag.SortDescending) })
            </th>
            @if (User.Identity.IsAuthenticated)
            {
                <th><!--Header for Action links--></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>

                @if (User.Identity.IsAuthenticated)
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { Id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { Id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { Id = item.Id })
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
