@model IEnumerable<KVA.Cinema.Models.ViewModels.Subscription.SubscriptionDisplayViewModel>
@using KVA.Cinema.Models.ViewModels.Subscription;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

@if (User.Identity.IsAuthenticated)
{
    <p>
        @Html.ActionLink("Create New", "Create", "Subscriptions", null, new { @class = "btn btn-primary" })
    </p>
}

<table class="table">
    <thead>
        <tr>
            @if (User.Identity.IsAuthenticated)
            {
                <th><!--Header for "Buy" button--></th>
            }
            <th>
                @Html.ActionLink(
                    ViewBag.SortingField == SubscriptionSort.Title
                    ? $"Title {(ViewBag.SortDescending ? "▾" : "▴")}"
                    : "Title",
                    "Index", new { sortingField = SubscriptionSort.Title, isSortDescending = (ViewBag.SortingField == SubscriptionSort.Title && !ViewBag.SortDescending) })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.ActionLink(
                    ViewBag.SortingField == SubscriptionSort.Cost
                    ? $"Cost {(ViewBag.SortDescending ? "▾" : "▴")}"
                    : "Cost",
                    "Index", new { sortingField = SubscriptionSort.Cost, isSortDescending = (ViewBag.SortingField == SubscriptionSort.Cost && !ViewBag.SortDescending) })
            </th>
            <th>
                @Html.ActionLink(
                    ViewBag.SortingField == SubscriptionSort.ReleasedIn
                    ? $"Released in {(ViewBag.SortDescending ? "▾" : "▴")}"
                    : "Released in",
                    "Index", new { sortingField = SubscriptionSort.ReleasedIn, isSortDescending = (ViewBag.SortingField == SubscriptionSort.ReleasedIn && !ViewBag.SortDescending) })
            </th>
            <th>
                @Html.ActionLink(
                    ViewBag.SortingField == SubscriptionSort.Duration
                    ? $"Duration {(ViewBag.SortDescending ? "▾" : "▴")}"
                    : "Duration",
                    "Index", new { sortingField = SubscriptionSort.Duration, isSortDescending = (ViewBag.SortingField == SubscriptionSort.Duration && !ViewBag.SortDescending) })
            </th>
            <th>
                @Html.ActionLink(
                    ViewBag.SortingField == SubscriptionSort.AvailableUntil
                    ? $"Available until {(ViewBag.SortDescending ? "▾" : "▴")}"
                    : "Available until",
                    "Index", new { sortingField = SubscriptionSort.AvailableUntil, isSortDescending = (ViewBag.SortingField == SubscriptionSort.AvailableUntil && !ViewBag.SortDescending) })
            </th>
            <th>
                @Html.ActionLink(
                    ViewBag.SortingField == SubscriptionSort.Level
                    ? $"Level {(ViewBag.SortDescending ? "▾" : "▴")}"
                    : "Level",
                    "Index", new { sortingField = SubscriptionSort.Level, isSortDescending = (ViewBag.SortingField == SubscriptionSort.Level && !ViewBag.SortDescending) })
            </th>
            @if (User.Identity.IsAuthenticated)
            {
                <th><!--Header for Action links--></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                @if (User.Identity.IsAuthenticated)
                {
                    <td>
                        @if (item.IsPurchasedByCurrentUser)
                        {
                        @Html.ActionLink("Cancel", "CancelSubscription", "Users", new { subscriptionId = item.Id }, new { @class = "btn btn-primary", @title = "Cancel subscription" })
                        @Html.ActionLink("Buy", "", new { subscriptionId = item.Id }, new { @class = "btn btn-secondary disabled", @title = "You are already have this subscription" })
                        }
                        else
                        {
                        @Html.ActionLink("Buy", "BuySubscription", "Users", new { subscriptionId = item.Id }, new { @class = "btn btn-primary", @title = "Buy this subscription" })
                        }
                    </td>
                }

                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleasedIn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AvailableUntil)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LevelName)
                </td>

                @if (User.Identity.IsAuthenticated)
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { Id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { Id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { Id = item.Id })
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}