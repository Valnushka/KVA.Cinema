@using KVA.Cinema.ViewModels;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - KVA.Cinema</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="~/css/site.css" />

    <link rel="stylesheet" href="~/lib/select2-bootstrap/css/select2.min.css" />
    <link rel="stylesheet" href="~/lib/select2-bootstrap/css/select2-bootstrap-5-theme.min.css" />

</head>
<body>
    <header>
        <nav id="navigation-bar" class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">

            <div class="container">
                <a href="" style="display:contents">
                    <img src="~/lib/other-icons/frog.svg" width="5%" style="margin: auto 0.75rem" />
                </a>
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">KVA.Cinema</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    @{
                        Dictionary<string, string> mainControllers = new Dictionary<string, string>
                            {
                                { "Users", "Users" },
                                { "Videos", "Videos" },
                                { "Subscriptions", "Subscriptions" }
                            };

                        Dictionary<string, string> lookupControllers = new Dictionary<string, string>
                            {
                                { "Countries", "Countries" },
                                { "Languages", "Languages" },
                                { "Genres", "Genres" },
                                { "Directors", "Directors" },
                                { "Pegi", "PEGI" },
                                { "SubscriptionLevels", "Subscription levels" },
                                { "Tags", "Tags" }
                            };

                        var currentController = ViewContext.RouteData.Values["controller"].ToString();
                        var currentAction = ViewContext.RouteData.Values["action"].ToString();

                        bool isMainControllerActive = lookupControllers.ContainsKey(currentController);
                        bool isLookupControllerActive = lookupControllers.ContainsKey(currentController);
                    }

                    <ul class="nav nav-underline">
                        @foreach (var controller in mainControllers)
                        {
                            <li class="nav-item">
                                <a class="nav-link @(currentController == controller.Key ? "active" : "")" href="@Url.Action("Index", controller.Key)">@controller.Value</a>
                            </li>
                        }
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle @(isLookupControllerActive ? "active" : "")" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Lookups</a>
                            <ul class="dropdown-menu">
                                @foreach (var controller in lookupControllers)
                                {
                                    <li class="nav-item">
                                        <a class="nav-link @(currentController == controller.Key ? "active" : "")" href="@Url.Action("Index", controller.Key)">@controller.Value</a>
                                    </li>
                                }
                            </ul>
                        </li>
                    </ul>

                    <div style="display: flex; align-items: center; gap: 1rem">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <span>Hello, @User.Identity.Name</span>

                            <div class="dropdown-center">
                                <a class="icon-link"
                                   title="@User.Identity.Name"
                                   data-bs-toggle="dropdown"
                                   aria-expanded="false"
                                   style="font-size: 1.75rem"
                                   role="button">
                                    <i class="bi bi-person-circle"></i>
                                </a>

                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#">Profile</a></li>
                                    <li><a class="dropdown-item" href="#" id="logout_link">Logout</a></li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <a href="@Url.Action("Login", "Users")" class="icon-link"
                               title="Sign in / sign up" style="font-size: 1.75rem">
                                <i class="bi bi-person-circle"></i>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    @await Component.InvokeAsync("Breadcrumb", ViewBag.Breadcrumbs as List<Breadcrumb>)

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <div class="sticky-btn-container" style="position: sticky; bottom: 0;">
        <a href="#navigation-bar" class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5" />
            </svg>
        </a>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023-2024 KVA.Cinema - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/select2-bootstrap/js/select2.min.js"></script>
    <script type="text/javascript">
        function logout(event) {
            event.preventDefault();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Logout", "Users")",
                success: function (resultData) {
                    window.location.reload();
                },
            });
        }

        logout_link.onclick = logout;
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
